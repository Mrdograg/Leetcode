class Solution {
    int[]dp;
    int minCost(int[] height) {
        dp = new int[height.length];
        Arrays.fill(dp,-1);
        return helper(height.length - 1, height);
    }

    int helper(int i, int[] height) {
        if (i == 0) return 0;
       if(dp[i]!=-1)return dp[i];
        int left = helper(i - 1, height) + Math.abs(height[i] - height[i - 1]);

        int right = Integer.MAX_VALUE;
        if (i > 1) {
            right = helper(i - 2, height) + Math.abs(height[i] - height[i - 2]);
        }

        return dp[i]= Math.min(left, right);
    }
}
